<html>

<head>
<title>I/O Library</title>
</head>

<body BGCOLOR="#F0F0FF" BACKGROUND="../blueback.jpg">
<font FACE="Comic Sans MS,Arial, Helvetica">

<blockquote>
  <h1><a name="Main">ChannelArchiver I/O Library</a></h1>
  <h3>Purpose</h3>
  <p>All Channel Archiver Tools are based on this I/O library.<br>
  Currently it supports these data storage formats:<ul>
    <li>BinArchive: A binary archive of interlinked files.<br>
      For maintaining these files, see <a href="../manager/default.htm">ArchiveManager</a>
      documentation.</li>
    <li>MultiArchive: A set of BinArchives. See <a href="MultiArchive.htm">doc/libio/MultiArchive.h</a></li>
    <li>Possible future ideas: some SDDS-based format, an RDB interface, ??</li>
  </ul>
  <h3>Standard C++ library</h3>
  <p>The new (1997) standard C++ library for string, list, map, exception, ... classes is
  used whenever possible to prevent reinvention. For historic reasons there are already some
  similar classes &amp; templates in EPICS base, but those are not used.</p>
  <p>std::string showed a memory leak with RedHat 6.1 (that version of egcs g++, that is).<br>
  Tools/stdString is meant as a replacement. It can be used like std::string but implements
  only what was necessary so far.</p>
  <h3>Namespaces</h3>
  <p>Whenever possible, code it enclosed in a namespace Tools or ChanArch.</p>
  <p><a href="Layout.htm">Layout: Ideas, how to use</a></p>
  <p><a HREF="index.htm#Main">Class Reference</a> (generated from header files)</p>
</blockquote>
</font>
</body>
</html>
