<HTML>
<HEAD>
<TITLE>Class Documentation</TITLE>
<BODY BGCOLOR=#F0F0FF BACKGROUND="../blueback.jpg">
<FONT FACE="Comic Sans MS,Arial, Helvetica">
<BLOCKQUOTE>
<H1><A NAME=Main>MultiArchive Class</A></H1>

The MultiArchive class implements a <A HREF="ArchiveI.htm#Main">ArchiveI</A> interface
for accessing more than one archive.
<P>
The MultiArchive is configured via a "master" archive file,
an ASCII file with the following format:
<BR>
<UL>
<LI>Comments (starting with a number-sign) and empty lines are ignored
<LI>The very first line must be<BR>
   <PRE>master_version=1</PRE>
   There must be no comments preceding this line!
<LI>All remaining lines list one archive name per line
</UL>
<H2>Example</H2>
<PRE>
# ChannelArchiver master file
master_version=1
# First check the "fast" archive
/archives/fast/dir
# Then check the "main" archive
/archives/main/dir
# Then check Fred's "xyz" archive
/home/fred/xyzarchive/dir
</PRE>
<P>
This type of archive is read-only!
<P>
For now, each individual archive is in the binary data format (<A HREF="BinArchive.htm#Main">BinArchive</A>).
Later, it might be necessary to specify the type together with the name
for each archive. The master_version will then be incremented.
<BR>
If the "master" file is invalid, it is considered an ordinary BinArchive directory file,
i.e. Tools based on the MultiArchive should work just like BinArchive-based Tools
when operating on a single archive.
<BR>
<H2>Details</H2>
No sophisticated merging technique is used.
<BR>
The MultiArchive will allow read access to
the union of the individual channel sets.
<BR>
When combining archives with disjunct channel sets,
a read request for a channel will yield data
from the single archive that holds that channel.
<BR>
When channels are present in multiple archives,
a read request for a given point in time will
return values from the <I>first archive listed</I> in the master file
that has values for that channel and point in time.
<BR>
Consequently, one should avoid archives with overlapping time ranges.
If this cannot be avoided, the "most important" archive should be
listed first.
<H2>Interface</H2>
<UL>
<LI>
Open a MultiArchive for the given master file
<PRE>
MultiArchive (const stdString &master_file);
</PRE>
<LI>
All virtuals from <A HREF="ArchiveI.htm#Main">ArchiveI</A> are implemented,
except that the "write" routines fail for this read-only archive type.
<PRE>
</PRE>
</UL>
<HR WIDTH=40% ALIGN=LEFT>
<A HREF="index.htm#Main">Index</A>
<P ALIGN=CENTER>
<FONT SIZE=1>
Created from sources with <I>MakeDoc</I> Perl script.
</FONT>
</BLOCKQUOTE>
</FONT>
</P>
</BODY>
