<HTML>
<HEAD>
<TITLE>Class Documentation</TITLE>
<BODY BGCOLOR=#F0F0FF BACKGROUND="../blueback.jpg">
<FONT FACE="Comic Sans MS,Arial, Helvetica">
<BLOCKQUOTE>
<H1><A NAME=Main>Command: archive</A></H1>

<BR>
<B>Syntax:</B> archive subcommand ?options?
<P>
This command provides the starting point for accessing archived data.
<BR>
See also: <A HREF="channel.htm#Main">channel</A>.
<H2>Details</H2>
<UL>
<LI>
<B>Syntax:</B> <I>archive open archiveName</I>
<BR>
<B>Returns:</B> archiveId
<BR>
When the archive can be opened for read access,
an archiveId is returned,
otherwise $errorInfo is set.
<PRE>
</PRE>
<LI>
<B>Syntax:</B> <I>archive findFirstChannel archiveId</I>
<BR>
<B>Returns:</B> channelId.
<BR>
Always returns a channelId as long as the archiveId is valid.
Use <I>channel valid channelId</I> to check if the channelId
holds a valid channel.
<PRE>
</PRE>
<LI>
<B>Syntax:</B> <I>archive findChannelByName archiveId channelName</I>
<BR>
<B>Returns:</B> channelId.
<BR>
Similar to <I>findFirstChannel</I>...
<PRE>
</PRE>
<LI>
<B>Syntax:</B> <I>archive findChannelByPattern archiveId patternString</I>
<BR>
<B>Returns:</B> channelId.
<BR>
Similar to <I>findChannelByName</I>,
but <I>patternString</I> is a regular expression.
<BR>
Calling <I>channel next</I> on the resulting channelId will
try to find the next matching(!) channel.
<PRE>
</PRE>
<LI>
<B>Syntax:</B> <I>archive close archiveId</I>
<BR>
Invalidates archiveId as well as all related channelIds etc.<BR>
(Does not return error when Id was invalid)
<PRE>
</PRE>
</UL>
<HR WIDTH=40% ALIGN=LEFT>
<A HREF="index.htm#Main">Index</A>
<P ALIGN=CENTER>
<FONT SIZE=1>
Created from sources with <I>MakeDoc</I> Perl script.
</FONT>
</BLOCKQUOTE>
</FONT>
</P>
</BODY>
